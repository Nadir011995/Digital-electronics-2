
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008d2  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000b62  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000393  00000000  00000000  000011ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001580  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f4  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000240  00000000  00000000  00001998  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */
int main(void)
{
   
    
    DDRB = DDRB | (1<<LED_GREEN);
  80:	25 9a       	sbi	0x04, 5	; 4
	DDRB = DDRB | (1<<LED_ORANGE); 
  82:	23 9a       	sbi	0x04, 3	; 4
	DDRB = DDRB | (1<<LED_BLUE);
  84:	22 9a       	sbi	0x04, 2	; 4
    DDRB = DDRB | (1<<LED_YELLOW);
  86:	24 9a       	sbi	0x04, 4	; 4
    DDRC = DDRC | (1 << LED_RED );  
  88:	38 9a       	sbi	0x07, 0	; 7
   	
	  
	PORTB = PORTB & ~(1<<LED_GREEN);
  8a:	2d 98       	cbi	0x05, 5	; 5
    PORTB = PORTB & ~(1<<LED_ORANGE);
  8c:	2b 98       	cbi	0x05, 3	; 5
    PORTB = PORTB & ~(1<<LED_BLUE);
  8e:	2a 98       	cbi	0x05, 2	; 5
   	PORTB = PORTB & ~(1<<LED_YELLOW);
  90:	2c 98       	cbi	0x05, 4	; 5
	PORTC = PORTC & ~(1<<LED_RED);   
  92:	40 98       	cbi	0x08, 0	; 8
	   
	   
	   DDRD = DDRD & ~(1<<BTN); //Turn OFF
  94:	50 98       	cbi	0x0a, 0	; 10
	   PORTD = PORTD | (1<<BTN);
  96:	58 9a       	sbi	0x0b, 0	; 11
        // Pause several milliseconds
    
//1	
if (bit_is_clear(PIND, BTN))
	{
		PORTC=PORTC ^ (1<<LED_RED);
  98:	51 e0       	ldi	r21, 0x01	; 1
		PORTC = PORTC & ~(1<<LED_RED);
	}
//2		 
if (bit_is_clear(PIND, BTN))
	{
		PORTB=PORTB ^ (1<<LED_GREEN);
  9a:	30 e2       	ldi	r19, 0x20	; 32
		PORTB = PORTB & ~(1<<LED_GREEN);
	}
//3
if (bit_is_clear(PIND, BTN))
{
		PORTB=PORTB ^ (1<< LED_YELLOW);
  9c:	20 e1       	ldi	r18, 0x10	; 16
		PORTB = PORTB & ~(1<<LED_YELLOW);
}
//4
if (bit_is_clear(PIND, BTN))
{
		PORTB=PORTB ^ (1<< LED_ORANGE);
  9e:	98 e0       	ldi	r25, 0x08	; 8
		 PORTB = PORTB & ~(1<<LED_ORANGE);
}
//5
if (bit_is_clear(PIND, BTN))
{
		 PORTB=PORTB ^ (1<< LED_BLUE);
  a0:	44 e0       	ldi	r20, 0x04	; 4
    while (1)
    {
        // Pause several milliseconds
    
//1	
if (bit_is_clear(PIND, BTN))
  a2:	48 99       	sbic	0x09, 0	; 9
  a4:	0d c0       	rjmp	.+26     	; 0xc0 <main+0x40>
	{
		PORTC=PORTC ^ (1<<LED_RED);
  a6:	88 b1       	in	r24, 0x08	; 8
  a8:	85 27       	eor	r24, r21
  aa:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	6f ef       	ldi	r22, 0xFF	; 255
  ae:	79 e6       	ldi	r23, 0x69	; 105
  b0:	88 e1       	ldi	r24, 0x18	; 24
  b2:	61 50       	subi	r22, 0x01	; 1
  b4:	70 40       	sbci	r23, 0x00	; 0
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x32>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x3c>
  bc:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC & ~(1<<LED_RED);
  be:	40 98       	cbi	0x08, 0	; 8
	}
//2		 
if (bit_is_clear(PIND, BTN))
  c0:	48 99       	sbic	0x09, 0	; 9
  c2:	0d c0       	rjmp	.+26     	; 0xde <main+0x5e>
	{
		PORTB=PORTB ^ (1<<LED_GREEN);
  c4:	85 b1       	in	r24, 0x05	; 5
  c6:	83 27       	eor	r24, r19
  c8:	85 b9       	out	0x05, r24	; 5
  ca:	6f ef       	ldi	r22, 0xFF	; 255
  cc:	79 e6       	ldi	r23, 0x69	; 105
  ce:	88 e1       	ldi	r24, 0x18	; 24
  d0:	61 50       	subi	r22, 0x01	; 1
  d2:	70 40       	sbci	r23, 0x00	; 0
  d4:	80 40       	sbci	r24, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
  dc:	2d 98       	cbi	0x05, 5	; 5
	}
//3
if (bit_is_clear(PIND, BTN))
  de:	48 99       	sbic	0x09, 0	; 9
  e0:	0d c0       	rjmp	.+26     	; 0xfc <main+0x7c>
{
		PORTB=PORTB ^ (1<< LED_YELLOW);
  e2:	85 b1       	in	r24, 0x05	; 5
  e4:	82 27       	eor	r24, r18
  e6:	85 b9       	out	0x05, r24	; 5
  e8:	6f ef       	ldi	r22, 0xFF	; 255
  ea:	79 e6       	ldi	r23, 0x69	; 105
  ec:	88 e1       	ldi	r24, 0x18	; 24
  ee:	61 50       	subi	r22, 0x01	; 1
  f0:	70 40       	sbci	r23, 0x00	; 0
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x6e>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x78>
  f8:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTB = PORTB & ~(1<<LED_YELLOW);
  fa:	2c 98       	cbi	0x05, 4	; 5
}
//4
if (bit_is_clear(PIND, BTN))
  fc:	48 99       	sbic	0x09, 0	; 9
  fe:	0d c0       	rjmp	.+26     	; 0x11a <main+0x9a>
{
		PORTB=PORTB ^ (1<< LED_ORANGE);
 100:	85 b1       	in	r24, 0x05	; 5
 102:	89 27       	eor	r24, r25
 104:	85 b9       	out	0x05, r24	; 5
 106:	6f ef       	ldi	r22, 0xFF	; 255
 108:	79 e6       	ldi	r23, 0x69	; 105
 10a:	88 e1       	ldi	r24, 0x18	; 24
 10c:	61 50       	subi	r22, 0x01	; 1
 10e:	70 40       	sbci	r23, 0x00	; 0
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x8c>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 PORTB = PORTB & ~(1<<LED_ORANGE);
 118:	2b 98       	cbi	0x05, 3	; 5
}
//5
if (bit_is_clear(PIND, BTN))
 11a:	48 99       	sbic	0x09, 0	; 9
 11c:	0d c0       	rjmp	.+26     	; 0x138 <main+0xb8>
{
		 PORTB=PORTB ^ (1<< LED_BLUE);
 11e:	85 b1       	in	r24, 0x05	; 5
 120:	84 27       	eor	r24, r20
 122:	85 b9       	out	0x05, r24	; 5
 124:	6f ef       	ldi	r22, 0xFF	; 255
 126:	79 e6       	ldi	r23, 0x69	; 105
 128:	88 e1       	ldi	r24, 0x18	; 24
 12a:	61 50       	subi	r22, 0x01	; 1
 12c:	70 40       	sbci	r23, 0x00	; 0
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0xaa>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0xb4>
 134:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 PORTB = PORTB & ~(1<<LED_BLUE);
 136:	2a 98       	cbi	0x05, 2	; 5
}
//4		 
if (bit_is_clear(PIND, BTN))
 138:	48 99       	sbic	0x09, 0	; 9
 13a:	0d c0       	rjmp	.+26     	; 0x156 <main+0xd6>
{
		PORTB=PORTB ^ (1<< LED_ORANGE);
 13c:	85 b1       	in	r24, 0x05	; 5
 13e:	89 27       	eor	r24, r25
 140:	85 b9       	out	0x05, r24	; 5
 142:	6f ef       	ldi	r22, 0xFF	; 255
 144:	79 e6       	ldi	r23, 0x69	; 105
 146:	88 e1       	ldi	r24, 0x18	; 24
 148:	61 50       	subi	r22, 0x01	; 1
 14a:	70 40       	sbci	r23, 0x00	; 0
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xc8>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xd2>
 152:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTB = PORTB & ~(1<<LED_ORANGE);
 154:	2b 98       	cbi	0x05, 3	; 5
}
//3		  
if (bit_is_clear(PIND, BTN))
 156:	48 99       	sbic	0x09, 0	; 9
 158:	0d c0       	rjmp	.+26     	; 0x174 <main+0xf4>
{
		PORTB=PORTB ^ (1<< LED_YELLOW);
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	82 27       	eor	r24, r18
 15e:	85 b9       	out	0x05, r24	; 5
 160:	6f ef       	ldi	r22, 0xFF	; 255
 162:	79 e6       	ldi	r23, 0x69	; 105
 164:	88 e1       	ldi	r24, 0x18	; 24
 166:	61 50       	subi	r22, 0x01	; 1
 168:	70 40       	sbci	r23, 0x00	; 0
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0xe6>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0xf0>
 170:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTB = PORTB & ~(1<<LED_YELLOW);
 172:	2c 98       	cbi	0x05, 4	; 5
}
//2			
if (bit_is_clear(PIND, BTN))
 174:	48 99       	sbic	0x09, 0	; 9
 176:	0d c0       	rjmp	.+26     	; 0x192 <main+0x112>
{
		PORTB=PORTB ^ (1<<LED_GREEN);
 178:	85 b1       	in	r24, 0x05	; 5
 17a:	83 27       	eor	r24, r19
 17c:	85 b9       	out	0x05, r24	; 5
 17e:	6f ef       	ldi	r22, 0xFF	; 255
 180:	79 e6       	ldi	r23, 0x69	; 105
 182:	88 e1       	ldi	r24, 0x18	; 24
 184:	61 50       	subi	r22, 0x01	; 1
 186:	70 40       	sbci	r23, 0x00	; 0
 188:	80 40       	sbci	r24, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0x104>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x10e>
 18e:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 190:	2d 98       	cbi	0x05, 5	; 5
 192:	6f ef       	ldi	r22, 0xFF	; 255
 194:	70 e7       	ldi	r23, 0x70	; 112
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	61 50       	subi	r22, 0x01	; 1
 19a:	70 40       	sbci	r23, 0x00	; 0
 19c:	80 40       	sbci	r24, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <main+0x118>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <main+0x122>
 1a2:	00 00       	nop
 1a4:	7e cf       	rjmp	.-260    	; 0xa2 <main+0x22>

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
